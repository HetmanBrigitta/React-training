{"ast":null,"code":"var _jsxFileName = \"/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport style from './CustomFileInput.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomFileInput = ({\n  label,\n  onFileSelect,\n  onFileSelectError,\n  onFileSelectSuccess\n}) => {\n  _s();\n\n  const fileInput = useRef(null);\n\n  const handleFileInput = e => {\n    // handle validations\n    const file = e.target.files[0];\n    if (file.size > 1024) onFileSelectError({\n      error: \"File size cannot exceed more than 1MB\"\n    });else onFileSelectSuccess(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.customLabel,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        var _fileInput$current;\n\n        return fileInput.current && (fileInput === null || fileInput === void 0 ? void 0 : (_fileInput$current = fileInput.current) === null || _fileInput$current === void 0 ? void 0 : _fileInput$current.click());\n      },\n      className: \"btn btn-primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomFileInput, \"09+ds+3z18rIiMAYMZa/YbTXEjU=\");\n\n_c = CustomFileInput;\nexport default CustomFileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomFileInput\");","map":{"version":3,"sources":["/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx"],"names":["React","useRef","style","CustomFileInput","label","onFileSelect","onFileSelectError","onFileSelectSuccess","fileInput","handleFileInput","e","file","target","files","size","error","customLabel","current","click"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,MAApB,QAAkC,OAAlC;AAGA,OAAOC,KAAP,MAAkB,+BAAlB;;;AAIA,MAAMC,eAA2B,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,iBAAtB;AAAyCC,EAAAA;AAAzC,CAAD,KAAuE;AAAA;;AACzG,QAAMC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMQ,eAAe,GAAIC,CAAD,IAAW;AACjC;AACA,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,QAAIF,IAAI,CAACG,IAAL,GAAY,IAAhB,EACER,iBAAiB,CAAC;AAAES,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAjB,CADF,KAEKR,mBAAmB,CAACI,IAAD,CAAnB;AACN,GAND;;AAQA,sBACE;AAAA,eACGP,KAAK,iBAAI;AAAO,MAAA,SAAS,EAAEF,KAAK,CAACc,WAAxB;AAAA,gBAAsCZ;AAAtC;AAAA;AAAA;AAAA;AAAA,YADZ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEK;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEC,CAAC;AAAA;;AAAA,eAAIF,SAAS,CAACS,OAAV,KAAqBT,SAArB,aAAqBA,SAArB,6CAAqBA,SAAS,CAAES,OAAhC,uDAAqB,mBAAoBC,KAApB,EAArB,CAAJ;AAAA,OAAlB;AAAwE,MAAA,SAAS,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;GAAMf,e;;KAAAA,e;AAoBN,eAAeA,eAAf","sourcesContent":["import React, { FC, useRef } from 'react';\nimport { FieldProps } from 'formik';\n\nimport style from './CustomFileInput.module.scss';\n\ntype TProps = FieldProps & { label?: string };\n\nconst CustomFileInput: FC<TProps> = ({label, onFileSelect, onFileSelectError, onFileSelectSuccess}:any) => {\n  const fileInput = useRef(null)\n\n  const handleFileInput = (e:any) => {\n    // handle validations\n    const file = e.target.files[0];\n    if (file.size > 1024)\n      onFileSelectError({ error: \"File size cannot exceed more than 1MB\" });\n    else onFileSelectSuccess(file);\n  };\n\n  return (\n    <div>\n      {label && <label className={style.customLabel}>{label}</label>}\n        <input type=\"file\" onChange={handleFileInput} />\n        <button onClick={e => fileInput.current && fileInput?.current?.click()} className=\"btn btn-primary\" />\n    </div>\n  )\n};\n\nexport default CustomFileInput;\n"]},"metadata":{},"sourceType":"module"}