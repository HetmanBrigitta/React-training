{"ast":null,"code":"var _jsxFileName = \"/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport style from './DatePicker.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomFileInput = ({\n  label,\n  field,\n  field: {\n    name,\n    value\n  },\n  form: {\n    setFieldValue\n  }\n}) => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.customLabel,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n      type: \"file\",\n      onChange: e => setFieldValue(name, e.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n  const [files, setFiles] = useState();\n\n  const onFilesSelected = files => {\n    if (!files) return;\n    const transformedFiles = files.map(file => {\n      const lastModified = format(file.lastModified, \"d. MMM yyyy\", {\n        locale: da\n      });\n      return {\n        lastModified,\n        ...file\n      };\n    });\n    setFiles(transformedFiles);\n  };\n}; //export default CustomFileInput;\n//\n//\n\n\n_s(CustomFileInput, \"T89+ApmCwh7f+OGTVg3Wb6CEErc=\");\n\n_c = CustomFileInput;\nexport default CustomFileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomFileInput\");","map":{"version":3,"sources":["/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx"],"names":["React","style","CustomFileInput","label","field","name","value","form","setFieldValue","customLabel","e","target","files","setFiles","useState","onFilesSelected","transformedFiles","map","file","lastModified","format","locale","da"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;;;AAIA,MAAMC,eAA2B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBA,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAvB;AAAwCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAA9C,CAAD,KAAsE;AAAA;;AACxG,sBACE;AAAA,eACGL,KAAK,iBAAI;AAAO,MAAA,SAAS,EAAEF,KAAK,CAACQ,WAAxB;AAAA,gBAAsCN;AAAtC;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE,sBAAWC,KAAX;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAA8B,MAAA,QAAQ,EAAIM,CAAD,IAAOF,aAAa,CAACH,IAAD,EAAOK,CAAC,CAACC,MAAF,CAASC,KAAhB;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,EAAlC;;AAEA,QAAMC,eAAe,GAAIH,KAAD,IAAmB;AACzC,QAAI,CAACA,KAAL,EAAY;AAEZ,UAAMI,gBAAwB,GAAGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAgB;AACzD,YAAMC,YAAY,GAAGC,MAAM,CAACF,IAAI,CAACC,YAAN,EAAoB,aAApB,EAAmC;AAC5DE,QAAAA,MAAM,EAAEC;AADoD,OAAnC,CAA3B;AAGA,aAAO;AAAEH,QAAAA,YAAF;AAAgB,WAAGD;AAAnB,OAAP;AACD,KALgC,CAAjC;AAOAL,IAAAA,QAAQ,CAACG,gBAAD,CAAR;AACD,GAXD;AAYD,CAtBD,C,CAwBA;AACA;AACA;;;GA1BMd,e;;KAAAA,e;AA2BN,eAAeA,eAAf","sourcesContent":["import React, { FC } from 'react';\nimport { FieldProps } from 'formik';\nimport style from './DatePicker.module.scss';\n\ntype TProps = FieldProps & { label?: string };\n\nconst CustomFileInput: FC<TProps> = ({ label, field, field: { name, value }, form: { setFieldValue }}) => {\n  return (\n    <div>\n      {label && <label className={style.customLabel}>{label}</label>}\n      <input {...field} type=\"file\" onChange={ (e) => setFieldValue(name, e.target.files) } />\n    </div>\n  )\n\n  const [files, setFiles] = useState();\n\n  const onFilesSelected = (files: File[]) => {\n    if (!files) return;\n\n    const transformedFiles: File[] = files.map((file: File) => {\n      const lastModified = format(file.lastModified, \"d. MMM yyyy\", {\n        locale: da\n      });\n      return { lastModified, ...file };\n    });\n\n    setFiles(transformedFiles);\n  };\n};\n\n//export default CustomFileInput;\n//\n//\nexport default CustomFileInput;\n"]},"metadata":{},"sourceType":"module"}