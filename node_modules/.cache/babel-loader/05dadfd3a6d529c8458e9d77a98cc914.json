{"ast":null,"code":"var _jsxFileName = \"/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileUpload.tsx\";\n// TODO: Version 2\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomFileUpload = ({\n  field,\n  form\n}) => {\n  const handleChange = e => {\n    const file = e.currentTarget.files[0];\n    const reader = new FileReader();\n    const imgTag = document.getElementById('userAvatar');\n\n    if (imgTag) {\n      imgTag.title = file.name;\n\n      const onLoad = event => {\n        var _event$target;\n\n        imgTag.src = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result;\n      };\n\n      reader.onload = onLoad(e);\n    }\n\n    reader.readAsDataURL(file);\n    return form.setFieldValue(field.name, file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: event => handleChange(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\",\n      alt: \"\",\n      id: 'userAvatar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomFileUpload;\nexport default CustomFileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomFileUpload\");","map":{"version":3,"sources":["/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileUpload.tsx"],"names":["React","CustomFileUpload","field","form","handleChange","e","file","currentTarget","files","reader","FileReader","imgTag","document","getElementById","title","name","onLoad","event","src","target","result","onload","readAsDataURL","setFieldValue"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAA0B,OAA1B;;;AAcA,MAAMC,gBAA4B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAiC;AACpE,QAAMC,YAAY,GAAIC,CAAD,IAAe;AAClC,UAAMC,IAAI,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAAhB,CAAsB,CAAtB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAf;;AAEA,QAAIF,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,KAAP,GAAeR,IAAI,CAACS,IAApB;;AAEA,YAAMC,MAAM,GAAIC,KAAD,IAAgB;AAAA;;AAC7BN,QAAAA,MAAM,CAACO,GAAP,oBAAaD,KAAK,CAACE,MAAnB,kDAAa,cAAcC,MAA3B;AACD,OAFD;;AAIAX,MAAAA,MAAM,CAACY,MAAP,GAAgBL,MAAM,CAACX,CAAD,CAAtB;AACD;;AAEDI,IAAAA,MAAM,CAACa,aAAP,CAAqBhB,IAArB;AACA,WAAOH,IAAI,CAACoB,aAAL,CAAmBrB,KAAK,CAACa,IAAzB,EAA+BT,IAA/B,CAAP;AACD,GAjBD;;AAmBA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGW,KAAD,IAAmBb,YAAY,CAACa,KAAD;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,GAAG,EAAC,EAAhB;AAAmB,MAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1BD;;KAAMhB,gB;AA4BN,eAAeA,gBAAf","sourcesContent":["// TODO: Version 2\nimport React, { FC } from 'react';\nimport { FieldProps } from 'formik';\n\ninterface IEvent {\n  currentTarget: {\n    files: {\n      0: File;\n      length: number;\n    };\n  };\n}\n\ntype TProps = FileList & null & IEvent;\n\nconst CustomFileUpload: FC<TProps> = ({ field, form }: FieldProps) => {\n  const handleChange = (e: IEvent) => {\n    const file = e.currentTarget.files[0];\n    const reader = new FileReader();\n    const imgTag = document.getElementById('userAvatar');\n\n    if (imgTag) {\n      imgTag.title = file.name;\n      \n      const onLoad = (event: any) => {\n        imgTag.src = event.target?.result;\n      };\n\n      reader.onload = onLoad(e);\n    }\n\n    reader.readAsDataURL(file);\n    return form.setFieldValue(field.name, file);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={(event: TProps) => handleChange(event)} />\n      <img src=\"\" alt=\"\" id={'userAvatar'}/>\n    </div>\n  );\n};\n\nexport default CustomFileUpload;\n"]},"metadata":{},"sourceType":"module"}