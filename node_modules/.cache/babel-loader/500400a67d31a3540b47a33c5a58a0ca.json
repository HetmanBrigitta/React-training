{"ast":null,"code":"var _jsxFileName = \"/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport style from './CustomFileInput.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomFileInput = ({\n  label,\n  onFileSelect,\n  onFileSelectError,\n  onFileSelectSuccess\n}) => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null || '');\n  const fileInput = useRef(null);\n\n  const handleFileInput = e => {\n    // handle validations\n    const file = e.target.files[0];\n    if (file.size > 1024) onFileSelectError({\n      error: 'File size cannot exceed more than 1MB'\n    });else onFileSelectSuccess(file);\n  };\n\n  const submitForm = () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    axios.post(process.env.REACT_APP_BASE_URL + '/register', formData).then(res => {\n      alert('File Upload success');\n    }).catch(err => alert('File Upload Error'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.customLabel,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: e => fileInput.current && fileInput.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomFileInput, \"3xaqFRnEyUTmWpjuRm9EM22t8fo=\");\n\n_c = CustomFileInput;\nexport default CustomFileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomFileInput\");","map":{"version":3,"sources":["/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx"],"names":["React","useRef","useState","axios","style","CustomFileInput","label","onFileSelect","onFileSelectError","onFileSelectSuccess","selectedFile","setSelectedFile","fileInput","handleFileInput","e","file","target","files","size","error","submitForm","formData","FormData","append","post","process","env","REACT_APP_BASE_URL","then","res","alert","catch","err","customLabel","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAOC,KAAP,MAAkB,+BAAlB;;;AAIA,MAAMC,eAA2B,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,iBAAtB;AAAyCC,EAAAA;AAAzC,CAAD,KAAuE;AAAA;;AACzG,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,QAAQ,EAAT,CAAhD;AACA,QAAMU,SAAS,GAAGX,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMY,eAAe,GAAIC,CAAD,IAAW;AACjC;AACA,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,QAAIF,IAAI,CAACG,IAAL,GAAY,IAAhB,EACEV,iBAAiB,CAAC;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAjB,CADF,KAEKV,mBAAmB,CAACM,IAAD,CAAnB;AACN,GAND;;AAQA,QAAMK,UAAU,GAAG,MAAM;AACvB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBb,YAAxB;AAEAP,IAAAA,KAAK,CACFqB,IADH,CACQC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAiC,WADzC,EACsDN,QADtD,EAEGO,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAASF,KAAK,CAAC,mBAAD,CALvB;AAMD,GAVD;;AAYA,sBACE;AAAA,eACGxB,KAAK,iBAAI;AAAO,MAAA,SAAS,EAAEF,KAAK,CAAC6B,WAAxB;AAAA,gBAAsC3B;AAAtC;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEO;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,CAAC,IAAIF,SAAS,CAACsB,OAAV,IAAqBtB,SAAS,CAACsB;AAAnE;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/BD;;GAAM7B,e;;KAAAA,e;AAiCN,eAAeA,eAAf","sourcesContent":["import React, { FC, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { FieldProps } from 'formik';\n\nimport style from './CustomFileInput.module.scss';\n\ntype TProps = FieldProps & { label?: string };\n\nconst CustomFileInput: FC<TProps> = ({label, onFileSelect, onFileSelectError, onFileSelectSuccess}:any) => {\n  const [selectedFile, setSelectedFile] = useState(null || '');\n  const fileInput = useRef(null);\n\n  const handleFileInput = (e:any) => {\n    // handle validations\n    const file = e.target.files[0];\n    if (file.size > 1024)\n      onFileSelectError({ error: 'File size cannot exceed more than 1MB' });\n    else onFileSelectSuccess(file);\n  };\n\n  const submitForm = () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    axios\n      .post(process.env.REACT_APP_BASE_URL + '/register', formData)\n      .then((res) => {\n        alert('File Upload success');\n      })\n      .catch((err) => alert('File Upload Error'));\n  };\n\n  return (\n    <div>\n      {label && <label className={style.customLabel}>{label}</label>}\n      <input type=\"file\" onChange={handleFileInput} />\n      <button type=\"button\" onClick={e => fileInput.current && fileInput.current} />\n    </div>\n  )\n};\n\nexport default CustomFileInput;\n"]},"metadata":{},"sourceType":"module"}