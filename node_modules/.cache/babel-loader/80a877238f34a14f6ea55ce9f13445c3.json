{"ast":null,"code":"import * as Yup from 'yup';\nexport const registerSchema = Yup.object().shape({\n  username: Yup.string().required('This field is required!'),\n  password: Yup.string().min(8, 'Password is too short! Should be 8 chars minimum!').matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, 'Password must contain one uppercase, one lowercase, one Number and one special case character!').required('This field is required!'),\n  passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match!'),\n  email: Yup.string().email('This email address is not valid!').required('This field is required!'),\n  firstName: Yup.string().matches(/^[A-Za-z ][^-\\s]*$/, 'First name is not valid!').required('This field is required!'),\n  lastName: Yup.string().matches(/^[A-Za-z ][^-\\s]*$/, 'Last name is not valid!').required('This field is required!'),\n  birthDate: Yup.mixed().required('This field is required!'),\n  gender: Yup.number(),\n  bio: Yup.string(),\n  address: Yup.string(),\n  picture: Yup.string()\n});","map":{"version":3,"sources":["/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/authentication/register/validationSchema.ts"],"names":["Yup","registerSchema","object","shape","username","string","required","password","min","matches","passwordConfirmation","oneOf","ref","email","firstName","lastName","birthDate","mixed","gender","number","bio","address","picture"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,cAAc,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC/CC,EAAAA,QAAQ,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CADqC;AAE/CC,EAAAA,QAAQ,EAAEP,GAAG,CAACK,MAAJ,GACPG,GADO,CACH,CADG,EACA,mDADA,EAEPC,OAFO,CAGN,gEAHM,EAIN,gGAJM,EAMPH,QANO,CAME,yBANF,CAFqC;AAS/CI,EAAAA,oBAAoB,EAAEV,GAAG,CAACK,MAAJ,GAAaM,KAAb,CAAmB,CAACX,GAAG,CAACY,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAAnB,EAAgD,uBAAhD,CATyB;AAU/CC,EAAAA,KAAK,EAAEb,GAAG,CAACK,MAAJ,GAAaQ,KAAb,CAAmB,kCAAnB,EAAuDP,QAAvD,CAAgE,yBAAhE,CAVwC;AAW/CQ,EAAAA,SAAS,EAAEd,GAAG,CAACK,MAAJ,GACRI,OADQ,CACA,oBADA,EACsB,0BADtB,EAERH,QAFQ,CAEC,yBAFD,CAXoC;AAc/CS,EAAAA,QAAQ,EAAEf,GAAG,CAACK,MAAJ,GACPI,OADO,CACC,oBADD,EACuB,yBADvB,EAEPH,QAFO,CAEE,yBAFF,CAdqC;AAiB/CU,EAAAA,SAAS,EAAEhB,GAAG,CAACiB,KAAJ,GAAYX,QAAZ,CAAqB,yBAArB,CAjBoC;AAkB/CY,EAAAA,MAAM,EAAElB,GAAG,CAACmB,MAAJ,EAlBuC;AAmB/CC,EAAAA,GAAG,EAAEpB,GAAG,CAACK,MAAJ,EAnB0C;AAoB/CgB,EAAAA,OAAO,EAAErB,GAAG,CAACK,MAAJ,EApBsC;AAqB/CiB,EAAAA,OAAO,EAAEtB,GAAG,CAACK,MAAJ;AArBsC,CAAnB,CAAvB","sourcesContent":["import * as Yup from 'yup';\n\nexport const registerSchema = Yup.object().shape({\n  username: Yup.string().required('This field is required!'),\n  password: Yup.string()\n    .min(8, 'Password is too short! Should be 8 chars minimum!')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      'Password must contain one uppercase, one lowercase, one Number and one special case character!'\n    )\n    .required('This field is required!'),\n  passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match!'),\n  email: Yup.string().email('This email address is not valid!').required('This field is required!'),\n  firstName: Yup.string()\n    .matches(/^[A-Za-z ][^-\\s]*$/, 'First name is not valid!')\n    .required('This field is required!'),\n  lastName: Yup.string()\n    .matches(/^[A-Za-z ][^-\\s]*$/, 'Last name is not valid!')\n    .required('This field is required!'),\n  birthDate: Yup.mixed().required('This field is required!'),\n  gender: Yup.number(),\n  bio: Yup.string(),\n  address: Yup.string(),\n  picture: Yup.string()\n});\n"]},"metadata":{},"sourceType":"module"}