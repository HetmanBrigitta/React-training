{"ast":null,"code":"var _jsxFileName = \"/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/DatePicker.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport style from './DatePicker.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomDatePicker = ({\n  field: {\n    name\n  },\n  form: {\n    setFieldValue,\n    errors,\n    touched\n  },\n  label\n}) => {\n  _s();\n\n  const [selectedDate, setSelectedDate] = useState(null);\n  const checkError = errors && errors[name] && touched && touched[name];\n\n  const onChangeHandler = date => {\n    setSelectedDate(date);\n    setFieldValue(name, date);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.dateWrapper,\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.customLabel,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: selectedDate,\n      onChange: date => onChangeHandler(date),\n      dateFormat: \"yyyy-MM-dd\",\n      maxDate: new Date(),\n      peekNextMonth: true,\n      showMonthDropdown: true,\n      showYearDropdown: true,\n      dropdownMode: \"select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), checkError && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.error,\n      children: errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomDatePicker, \"rhrbPH1/NtfhiyDl62tZ0yGffOM=\");\n\n_c = CustomDatePicker;\nexport default CustomDatePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDatePicker\");","map":{"version":3,"sources":["/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/DatePicker.tsx"],"names":["React","useState","DatePicker","style","CustomDatePicker","field","name","form","setFieldValue","errors","touched","label","selectedDate","setSelectedDate","checkError","onChangeHandler","date","dateWrapper","customLabel","Date","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAIA,OAAO,4CAAP;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;;AAIA,MAAMC,gBAA4B,GAAG,CAAC;AACpCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF,GAD6B;AAEpCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA;AAAzB,GAF8B;AAGpCC,EAAAA;AAHoC,CAAD,KAI/B;AAAA;;AACJ,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAc,IAAd,CAAhD;AACA,QAAMa,UAAU,GAAGL,MAAM,IAAIA,MAAM,CAACH,IAAD,CAAhB,IAA0BI,OAA1B,IAAqCA,OAAO,CAACJ,IAAD,CAA/D;;AAEA,QAAMS,eAAe,GAAIC,IAAD,IAAsB;AAC5CH,IAAAA,eAAe,CAACG,IAAD,CAAf;AACAR,IAAAA,aAAa,CAACF,IAAD,EAAOU,IAAP,CAAb;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEb,KAAK,CAACc,WAAtB;AAAA,eACGN,KAAK,iBAAI;AAAO,MAAA,SAAS,EAAER,KAAK,CAACe,WAAxB;AAAA,gBAAsCP;AAAtC;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAEC,YADZ;AAEE,MAAA,QAAQ,EAAGI,IAAD,IAAgBD,eAAe,CAACC,IAAD,CAF3C;AAGE,MAAA,UAAU,EAAC,YAHb;AAIE,MAAA,OAAO,EAAE,IAAIG,IAAJ,EAJX;AAKE,MAAA,aAAa,MALf;AAME,MAAA,iBAAiB,MANnB;AAOE,MAAA,gBAAgB,MAPlB;AAQE,MAAA,YAAY,EAAC;AARf;AAAA;AAAA;AAAA;AAAA,YAFF,EAYGL,UAAU,iBAAI;AAAO,MAAA,SAAS,EAAEX,KAAK,CAACiB,KAAxB;AAAA,gBAAgCX,MAAM,CAACH,IAAD;AAAtC;AAAA;AAAA;AAAA;AAAA,YAZjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7BD;;GAAMF,gB;;KAAAA,gB;AA+BN,eAAeA,gBAAf","sourcesContent":["import React, { FC, useState } from 'react';\nimport DatePicker from 'react-datepicker';\n\nimport { FieldProps } from 'formik';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport style from './DatePicker.module.scss';\n\ntype TProps = FieldProps & { label?: string };\n\nconst CustomDatePicker: FC<TProps> = ({\n  field: { name },\n  form: { setFieldValue, errors, touched },\n  label\n}) => {\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n  const checkError = errors && errors[name] && touched && touched[name];\n\n  const onChangeHandler = (date: Date): void => {\n    setSelectedDate(date);\n    setFieldValue(name, date);\n  };\n\n  return (\n    <div className={style.dateWrapper}>\n      {label && <label className={style.customLabel}>{label}</label>}\n      <DatePicker\n        selected={selectedDate}\n        onChange={(date: Date) => onChangeHandler(date)}\n        dateFormat=\"yyyy-MM-dd\"\n        maxDate={new Date()}\n        peekNextMonth\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n      />\n      {checkError && <label className={style.error}>{errors[name]}</label>}\n    </div>\n  );\n};\n\nexport default CustomDatePicker;\n"]},"metadata":{},"sourceType":"module"}