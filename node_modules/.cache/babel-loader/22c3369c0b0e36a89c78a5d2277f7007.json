{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport JwtDecode from 'jwt-decode';\nimport { authApi } from '../api/authApi';\nimport { authActions } from '../store/reducers/authReducer';\n\nconst useAuth = () => {\n  _s();\n\n  const [error, setError] = useState('');\n  const dispatch = useDispatch();\n\n  const handleLogin = token => {\n    localStorage.setItem('authToken', token);\n    const decodedToken = JwtDecode(token);\n    dispatch(authActions.setUserInfo(decodedToken));\n  };\n\n  const login = async values => {\n    setError('');\n    await authApi.login(values).then(({\n      data\n    }) => handleLogin(data.token)).catch(({\n      response\n    }) => !error && setError(response.data.error));\n  };\n\n  const register = async ({\n    passwordConfirmation,\n    ...values\n  }) => {\n    var _values$birthDate;\n\n    const {\n      username,\n      password\n    } = values;\n    authApi.register({ ...values,\n      picture: values.picture || undefined,\n      birthDate: ((_values$birthDate = values.birthDate) === null || _values$birthDate === void 0 ? void 0 : _values$birthDate.split('T')[0]) || ''\n    }).catch(({\n      response\n    }) => !error && setError(response.data.error));\n    await login({\n      username,\n      password\n    });\n  };\n\n  return [login, register, error];\n};\n\n_s(useAuth, \"lqCgD3SUoe0A7GdMZCbhCgoiS2o=\", false, function () {\n  return [useDispatch];\n});\n\nexport default useAuth;","map":{"version":3,"sources":["/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/hooks/useAuth.ts"],"names":["useState","useDispatch","JwtDecode","authApi","authActions","useAuth","error","setError","dispatch","handleLogin","token","localStorage","setItem","decodedToken","setUserInfo","login","values","then","data","catch","response","register","passwordConfirmation","username","password","picture","undefined","birthDate","split"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAeA,MAAMC,OAAO,GAAG,MAAe;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,WAAW,GAAIC,KAAD,IAAyB;AAC3CC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,KAAlC;AACA,UAAMG,YAAmB,GAAGX,SAAS,CAACQ,KAAD,CAArC;AACAF,IAAAA,QAAQ,CAACJ,WAAW,CAACU,WAAZ,CAAwBD,YAAxB,CAAD,CAAR;AACD,GAJD;;AAMA,QAAME,KAAK,GAAG,MAAOC,MAAP,IAAwC;AACpDT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEA,UAAMJ,OAAO,CACVY,KADG,CACGC,MADH,EAEHC,IAFG,CAEE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcT,WAAW,CAACS,IAAI,CAACR,KAAN,CAF3B,EAGHS,KAHG,CAGG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkC,CAACd,KAAD,IAAUC,QAAQ,CAACa,QAAQ,CAACF,IAAT,CAAcZ,KAAf,CAHvD,CAAN;AAID,GAPD;;AASA,QAAMe,QAAQ,GAAG,OAAO;AAAEC,IAAAA,oBAAF;AAAwB,OAAGN;AAA3B,GAAP,KAAyE;AAAA;;AACxF,UAAM;AAAEO,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBR,MAA/B;AAEAb,IAAAA,OAAO,CACJkB,QADH,CACY,EAAC,GAAGL,MAAJ;AAAYS,MAAAA,OAAO,EAAET,MAAM,CAACS,OAAP,IAAkBC,SAAvC;AAAkDC,MAAAA,SAAS,EAAE,sBAAAX,MAAM,CAACW,SAAP,wEAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,MAAmC;AAAhG,KADZ,EAEGT,KAFH,CAES,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkC,CAACd,KAAD,IAAUC,QAAQ,CAACa,QAAQ,CAACF,IAAT,CAAcZ,KAAf,CAF7D;AAIA,UAAMS,KAAK,CAAC;AAAEQ,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAX;AACD,GARD;;AAUA,SAAO,CAACT,KAAD,EAAQM,QAAR,EAAkBf,KAAlB,CAAP;AACD,CA9BD;;GAAMD,O;UAEaJ,W;;;AA8BnB,eAAeI,OAAf","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport JwtDecode from 'jwt-decode';\n\nimport { authApi } from '../api/authApi';\nimport { authActions } from '../store/reducers/authReducer';\n\nimport { IAuth, IRegister } from '../interfaces/IAuth';\nimport { IUser } from '../interfaces/IUser';\n\ntype TReturn = [(values: IAuth) => Promise<void>, (values: IRegister) => Promise<void>, string];\n\ninterface IErrorResponse {\n  response: {\n    data: {\n      error: string;\n    };\n  };\n}\n\nconst useAuth = (): TReturn => {\n  const [error, setError] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const handleLogin = (token: string): void => {\n    localStorage.setItem('authToken', token);\n    const decodedToken: IUser = JwtDecode(token);\n    dispatch(authActions.setUserInfo(decodedToken));\n  };\n\n  const login = async (values: IAuth): Promise<void> => {\n    setError('');\n\n    await authApi\n      .login(values)\n      .then(({ data }) => handleLogin(data.token))\n      .catch(({ response }: IErrorResponse) => !error && setError(response.data.error));\n  };\n\n  const register = async ({ passwordConfirmation, ...values }: IRegister): Promise<void> => {\n    const { username, password } = values;\n\n    authApi\n      .register({...values, picture: values.picture || undefined, birthDate: values.birthDate?.split('T')[0] || ''})\n      .catch(({ response }: IErrorResponse) => !error && setError(response.data.error));\n\n    await login({ username, password });\n  };\n\n  return [login, register, error];\n};\n\nexport default useAuth;\n"]},"metadata":{},"sourceType":"module"}