{"ast":null,"code":"var _jsxFileName = \"/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomFileInput = ({\n  label,\n  field,\n  field: {\n    name,\n    value\n  },\n  form: {\n    setFieldValue\n  }\n}) => {\n  _s();\n\n  const [files, setFiles] = useState();\n\n  const onSelectFile = files => {\n    if (!files) return;\n    const addedFiles = files.map(file => {\n      return { ...file\n      };\n    });\n    setFiles(addedFiles);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.customLabel,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n      type: \"file\",\n      onChange: e => setFieldValue(name, e.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomFileInput, \"T89+ApmCwh7f+OGTVg3Wb6CEErc=\");\n\n_c = CustomFileInput;\nexport default CustomFileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomFileInput\");","map":{"version":3,"sources":["/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx"],"names":["React","useState","CustomFileInput","label","field","name","value","form","setFieldValue","files","setFiles","onSelectFile","addedFiles","map","file","style","customLabel","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;;;AASA,MAAMC,eAA2B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBA,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAvB;AAAwCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAA9C,CAAD,KAAsE;AAAA;;AACxG,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;;AACA,QAAMU,YAAY,GAAIF,KAAD,IAAmB;AACtC,QAAI,CAACA,KAAL,EAAY;AAEZ,UAAMG,UAAkB,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAgB;AACnD,aAAO,EAAE,GAAGA;AAAL,OAAP;AACD,KAF0B,CAA3B;AAIAJ,IAAAA,QAAQ,CAACE,UAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAA,eACGT,KAAK,iBAAI;AAAO,MAAA,SAAS,EAAEY,KAAK,CAACC,WAAxB;AAAA,gBAAsCb;AAAtC;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE,sBAAWC,KAAX;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAA8B,MAAA,QAAQ,EAAIa,CAAD,IAAOT,aAAa,CAACH,IAAD,EAAOY,CAAC,CAACC,MAAF,CAAST,KAAhB;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD;;GAAMP,e;;KAAAA,e;AAoBN,eAAeA,eAAf","sourcesContent":["import React, { FC, useState } from 'react';\nimport { FieldProps } from 'formik';\n\ninterface IFiles {\n  files: File[];\n}\n\ntype TProps = FieldProps & IFiles & { label?: string };\n\nconst CustomFileInput: FC<TProps> = ({ label, field, field: { name, value }, form: { setFieldValue }}) => {\n  const [files, setFiles] = useState();\n  const onSelectFile = (files: File[]) => {\n    if (!files) return;\n\n    const addedFiles: File[] = files.map((file: File) => {\n      return { ...file };\n    });\n\n    setFiles(addedFiles);\n  };\n\n  return (\n    <div>\n      {label && <label className={style.customLabel}>{label}</label>}\n      <input {...field} type=\"file\" onChange={ (e) => setFieldValue(name, e.target.files) } />\n    </div>\n  )\n};\n\nexport default CustomFileInput;\n"]},"metadata":{},"sourceType":"module"}