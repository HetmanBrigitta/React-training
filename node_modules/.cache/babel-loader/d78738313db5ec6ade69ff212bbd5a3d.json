{"ast":null,"code":"var _jsxFileName = \"/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomFileInput = ({\n  field: {\n    name\n  },\n  field,\n  form: {\n    errors,\n    touched\n  },\n  type,\n  label\n}) => {\n  const checkError = errors && errors[name] && touched && touched[name];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      style: {\n        display: \"none\"\n      },\n      onChange: event => {\n        setFieldValue(\"file\", event.currentTarget.files[0]);\n      },\n      ref: fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => fileInput.current.click(),\n      children: \"Choose file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomFileInput;\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomFileInput\");","map":{"version":3,"sources":["/home/brigitta.hetman/B/OFFICE/my_projects/hotel-service-management/src/components/shared/CustomFileInput.tsx"],"names":["React","CustomFileInput","field","name","form","errors","touched","type","label","checkError","display","event","setFieldValue","currentTarget","files","fileInput","current","click","CustomInput"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;;;AAOA,MAAMC,eAA2B,GAAG,CAAC;AACpCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF,GAD6B;AAEpCD,EAAAA,KAFoC;AAGpCE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAH8B;AAIpCC,EAAAA,IAJoC;AAKpCC,EAAAA;AALoC,CAAD,KAM9B;AACJ,QAAMC,UAAU,GAAGJ,MAAM,IAAIA,MAAM,CAACF,IAAD,CAAhB,IAA0BG,OAA1B,IAAqCA,OAAO,CAACH,IAAD,CAA/D;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE;AAACO,QAAAA,OAAO,EAAE;AAAV,OAFT;AAGE,MAAA,QAAQ,EAAEC,KAAK,IAAI;AACjBC,QAAAA,aAAa,CAAC,MAAD,EAASD,KAAK,CAACE,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAAT,CAAb;AACD,OALH;AAME,MAAA,GAAG,EAAEC;AANP;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMA,SAAS,CAACC,OAAV,CAAkBC,KAAlB,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxBD;;KAAMhB,e;AA0BN,eAAeiB,WAAf","sourcesContent":["import React, { FC } from 'react';\nimport { FieldProps } from 'formik';\n\nimport style from './CustomInput.module.scss';\n\ntype TProps = FieldProps & { type: string; label?: string };\n\nconst CustomFileInput: FC<TProps> = ({\n field: { name },\n field,\n form: { errors, touched },\n type,\n label\n}) => {\n  const checkError = errors && errors[name] && touched && touched[name];\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        style={{display: \"none\"}}\n        onChange={event => {\n          setFieldValue(\"file\", event.currentTarget.files[0]);\n        }}\n        ref={fileInput}\n      />\n      <button type=\"button\" onClick={() => fileInput.current.click()}>\n        Choose file\n      </button>\n    </div>\n  );\n};\n\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}